class FEmbed {
    static final defaultHeaders = {
        'User-Agent': Http.defaultUserAgent,
    };

    static fun sourcesApiURL(baseURL, id) {
        return URL.ensureURL('${baseURL}/api/source/${id}');
    }

    static fun parse(_url, { locale }) {
        final url = URL.ensureURL(_url);
        final parsedUrl = URL.parse(url);

        final id = Regex('/v/([^?#&/.]+)').firstMatch(url)?.group(1);
        if (id == null) return [];

        return AsyncTask.resolve(
            () => Http.fetch(
                method: 'post',
                url: sourcesApiURL(parsedUrl.origin, id),
                headers: Collection.mergeMap(defaultHeaders, {
                    'Referer': url,
                    'X-Requested-With': 'XMLHttpRequest',
                }),
            ),
            onDone: fun (resp) {
                final parsed = Converter.jsonDecode(resp.body);
                if (!parsed['success']) return [];

                return Collection.mapList(
                    parsed['data'],
                    fun (i, x) {
                        return EpisodeSource(
                            url: URL.ensureURL(x['file']),
                            headers: Collection.mergeMap(defaultHeaders, {
                                'Referer': parsedUrl.origin,
                            }),
                            quality: x['label'],
                            locale: locale,
                        );
                    }
                );
            },
        );
    }
}
